desdir="/home/mclab/R/git/M.C.Lab"
setwd(desdir)
source('./MC_Function.R')
setwd('~/seq_result')
filenames= lsit.files()
data=data.frame()
for (i in 1:length(filenames)){
data=rbind(data,
read.csv(filenames[i]))
}
summary(data)
setwd('~/seq_result')
filenames= list.files()
data=data.frame()
for (i in 1:length(filenames)){
data=rbind(data,
read.csv(filenames[i]))
}
summary(data)
head(data)
duplicated(data)
head(data)
setwd('~/seq_result')
filenames= list.files()
data=data.frame()
for (i in 1:length(filenames)){
data=rbind(data,
read.csv(filenames[i]))
}
summary(data)
head(data)
data=data[!duplicated(data[,1]),]
summary(data)
data$description
des=data$description[!duplicated(data$description)]
des
library(magrittr)
des=data$description[!duplicated(data$description)] %>% as.character()
des
data$names
data$Seq.Names
data$Seq.Names
index=matrix(ncol=length(des), nrow=nrow(data))
i=1
grep(des[i],data$description%>%as.character())
index=matrix(ncol=length(des), nrow=nrow(data))
for (i in 1:lengt(des)){
index[i,]=grep(des[i],data$description%>%as.character())
}
for (i in 1:length(des)){
index[i,]=grep(des[i],data$description%>%as.character())
}
index
for (i in 1:length(des)){
index[i,]=grep(des[i],data$description%>%as.character())
}
lg=grep(des[i],data$description%>%as.character())
index=matrix(ncol=length(des), nrow=nrow(data))
for (i in 1:length(des)){
lg=grep(des[i],data$description%>%as.character())
index[i,1:length(lg)]=lg
}
i
i=1
lg=grep(des[i],data$description%>%as.character())
index[i,1:length(lg)]=lg
i=2
lg=grep(des[i],data$description%>%as.character())
lg
index[i,1:length(lg)]
index=matrix(ncol=length(des), nrow=nrow(data))
for (i in 1:length(des)){
lg=grep(des[i],data$description%>%as.character())
index[1:length(lg),i]=lg
}
i
isEmpty()
#INSTALLATION
library(annotate)
library(Biostrings) #DNAStringSet Object
library(rBLAST)
library(rMSA)
library(devtools)
library(magrittr)
library(seqinr)
library(ape) #read.dna, write.fasta
library(data.table)
library(lubridate)
library(RCurl)
library(magrittr)
library(R.utils)
library(downloader)
library(ggplot2)
library(gridExtra)
library(plyr)
library(taxize)
library(rentrez)
isEmpty()
length(lg)
index=matrix(ncol=length(des), nrow=nrow(data))
for (i in 1:length(des)){
lg=grep(des[i],data$description%>%as.character())
if (length(lg)!=0){
index[1:length(lg),i]=lg
}
}
index
index%>%na.omit()
index%>%na.pass()
des[9]
library(magrittr)
setwd('~/seq_result')
filenames= list.files()
data=data.frame()
for (i in 1:length(filenames)){
data=rbind(data,
read.csv(filenames[i]))
}
summary(data)
head(data)
data=data[!duplicated(data[,1]),]
data
des=data$description[!duplicated(data$description)] %>% as.character()
data$Seq.Names
des
grep('Camelina',data$description)
grep('Camelina',data$description%>%as.character())
grep('Camelina',data$description)
index
i=9
lg=grep(des[i],data$description%>%as.character())
lg
des[i]
data$description%>%as.character()
grep(des[i],data$description)
data$description
des[i]
data$description[45]
des[9]
grep(des[9],data$description[45])
grep(des[9],as.character(data$description[45]))
as.character(data$description[45])
des[9]
identical(des[9],as.character(data$description[45]))
grep(des[9],as.character(data$description[45]))
grep('abc','abc')
A=des[9]
B=as.character(data$description[45])
grep(A,B)
identical(A,B)
A
B
grepl(A,B)
grep(A,B)
identical(A,B)
A="PREDICTED: Camelina sativa histone H3.2 (LOC104710561), mRNA"
B="PREDICTED: Camelina sativa histone H3.2 (LOC104710561), mRNA"
identical(A,B)
grepl(A,B)
grepl("this is a book", "this is a book")
time=proc.time()[3]
t=proc.time()[3]-time
t.
t
t=3890
t/60
t%%60
t%60
t%%60
t
hr=t%/%3600
hr
hrre=t%%3600
hrre
hrre%/%60
minre
hr=t%/%3600
hrre=t%%3600
min=hrre%/%60
minre=hrre%%60
minre
hr=t%/%3600
hrre=t%%3600
min=hrre%/%60
sec=hrre%%60
paste0("It tooks ", hr, " hour(s) ", min, " minute(s)", sec, " second(s) to complete." )
paste0("It tooks ", hr, " hour", min, " minute", sec, " second to complete." )
paste0("It tooks ", hr, " hour ", min, " minute ", sec, " second to complete." )
source('~/workspace/M.C.Function/RScripts/Renaming.R')
source('~/workspace/M.C.Function/RScripts/Renaming.R')
